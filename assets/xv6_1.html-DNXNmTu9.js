import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,d as t}from"./app-Oy38R-CL.js";const p={},e=t(`<h1 id="xv6源码精读-proc-c" tabindex="-1"><a class="header-anchor" href="#xv6源码精读-proc-c"><span>XV6源码精读 -- proc.c</span></a></h1><h2 id="proc-pagetable-struct-proc-p" tabindex="-1"><a class="header-anchor" href="#proc-pagetable-struct-proc-p"><span>proc_pagetable(struct proc *p)</span></a></h2><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token comment">// 创建给定进程的用户页表，没有用户内存，但有跳板和陷阱帧页。</span>
<span class="token class-name">pagetable_t</span>
<span class="token function">proc_pagetable</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">proc</span> <span class="token operator">*</span>p<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token class-name">pagetable_t</span> pagetable<span class="token punctuation">;</span>

  <span class="token comment">// 创建一个空白页表</span>
  pagetable <span class="token operator">=</span> <span class="token function">uvmcreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>pagetable <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token comment">// map the trampoline code (for system call return)</span>
  <span class="token comment">// at the highest user virtual address.</span>
  <span class="token comment">// only the supervisor uses it, on the way</span>
  <span class="token comment">// to/from user space, so not PTE_U.</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">mappages</span><span class="token punctuation">(</span>pagetable<span class="token punctuation">,</span> TRAMPOLINE<span class="token punctuation">,</span> PGSIZE<span class="token punctuation">,</span>
              <span class="token punctuation">(</span>uint64<span class="token punctuation">)</span>trampoline<span class="token punctuation">,</span> PTE_R <span class="token operator">|</span> PTE_X<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">uvmfree</span><span class="token punctuation">(</span>pagetable<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// map the trapframe page just below the trampoline page, for</span>
  <span class="token comment">// trampoline.S.</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">mappages</span><span class="token punctuation">(</span>pagetable<span class="token punctuation">,</span> TRAPFRAME<span class="token punctuation">,</span> PGSIZE<span class="token punctuation">,</span>
              <span class="token punctuation">(</span>uint64<span class="token punctuation">)</span><span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>trapframe<span class="token punctuation">)</span><span class="token punctuation">,</span> PTE_R <span class="token operator">|</span> PTE_W<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">uvmunmap</span><span class="token punctuation">(</span>pagetable<span class="token punctuation">,</span> TRAMPOLINE<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">uvmfree</span><span class="token punctuation">(</span>pagetable<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> pagetable<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),o=[e];function c(l,u){return a(),s("div",null,o)}const k=n(p,[["render",c],["__file","xv6_1.html.vue"]]),m=JSON.parse(`{"path":"/cs-basics/os/6.S081/xv6/xv6_1.html","title":"XV6源码精读 -- proc.c","lang":"zh-CN","frontmatter":{"icon":"code-bold","date":"2024-05-07T00:00:00.000Z","category":["操作系统"],"tag":["MIT","XV6","riscv","C"],"description":"XV6源码精读 -- proc.c proc_pagetable(struct proc *p)","head":[["meta",{"property":"og:url","content":"https://passerbyjia.github.io/cs-basics/os/6.S081/xv6/xv6_1.html"}],["meta",{"property":"og:site_name","content":"Plus's NoteBook"}],["meta",{"property":"og:title","content":"XV6源码精读 -- proc.c"}],["meta",{"property":"og:description","content":"XV6源码精读 -- proc.c proc_pagetable(struct proc *p)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-08T05:23:50.000Z"}],["meta",{"property":"article:author","content":"Plus"}],["meta",{"property":"article:tag","content":"MIT"}],["meta",{"property":"article:tag","content":"XV6"}],["meta",{"property":"article:tag","content":"riscv"}],["meta",{"property":"article:tag","content":"C"}],["meta",{"property":"article:published_time","content":"2024-05-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-08T05:23:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"XV6源码精读 -- proc.c\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-07T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-08T05:23:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Plus\\",\\"url\\":\\"https://passerbyjia.github.io\\"}]}"]]},"headers":[{"level":2,"title":"proc_pagetable(struct proc *p)","slug":"proc-pagetable-struct-proc-p","link":"#proc-pagetable-struct-proc-p","children":[]}],"git":{"createdTime":1715145830000,"updatedTime":1715145830000,"contributors":[{"name":"JH","email":"jh_personal@163.com","commits":1}]},"readingTime":{"minutes":0.54,"words":161},"filePathRelative":"cs-basics/os/6.S081/xv6/xv6_1.md","localizedDate":"2024年5月7日","excerpt":"\\n<h2>proc_pagetable(struct proc *p)</h2>\\n<div class=\\"language-c\\" data-ext=\\"c\\" data-title=\\"c\\"><pre class=\\"language-c\\"><code><span class=\\"token comment\\">// 创建给定进程的用户页表，没有用户内存，但有跳板和陷阱帧页。</span>\\n<span class=\\"token class-name\\">pagetable_t</span>\\n<span class=\\"token function\\">proc_pagetable</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">proc</span> <span class=\\"token operator\\">*</span>p<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token class-name\\">pagetable_t</span> pagetable<span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token comment\\">// 创建一个空白页表</span>\\n  pagetable <span class=\\"token operator\\">=</span> <span class=\\"token function\\">uvmcreate</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>pagetable <span class=\\"token operator\\">==</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token comment\\">// map the trampoline code (for system call return)</span>\\n  <span class=\\"token comment\\">// at the highest user virtual address.</span>\\n  <span class=\\"token comment\\">// only the supervisor uses it, on the way</span>\\n  <span class=\\"token comment\\">// to/from user space, so not PTE_U.</span>\\n  <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">mappages</span><span class=\\"token punctuation\\">(</span>pagetable<span class=\\"token punctuation\\">,</span> TRAMPOLINE<span class=\\"token punctuation\\">,</span> PGSIZE<span class=\\"token punctuation\\">,</span>\\n              <span class=\\"token punctuation\\">(</span>uint64<span class=\\"token punctuation\\">)</span>trampoline<span class=\\"token punctuation\\">,</span> PTE_R <span class=\\"token operator\\">|</span> PTE_X<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">uvmfree</span><span class=\\"token punctuation\\">(</span>pagetable<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token comment\\">// map the trapframe page just below the trampoline page, for</span>\\n  <span class=\\"token comment\\">// trampoline.S.</span>\\n  <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">mappages</span><span class=\\"token punctuation\\">(</span>pagetable<span class=\\"token punctuation\\">,</span> TRAPFRAME<span class=\\"token punctuation\\">,</span> PGSIZE<span class=\\"token punctuation\\">,</span>\\n              <span class=\\"token punctuation\\">(</span>uint64<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">(</span>p<span class=\\"token operator\\">-&gt;</span>trapframe<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> PTE_R <span class=\\"token operator\\">|</span> PTE_W<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">uvmunmap</span><span class=\\"token punctuation\\">(</span>pagetable<span class=\\"token punctuation\\">,</span> TRAMPOLINE<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token function\\">uvmfree</span><span class=\\"token punctuation\\">(</span>pagetable<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">return</span> pagetable<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}`);export{k as comp,m as data};
